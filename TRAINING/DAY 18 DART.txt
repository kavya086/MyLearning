Asynchronization in Dart:

What is asynchronization?

Let us assume that we are fetching a large dataset from an API in dart. It will obviously need some time to finish that task. But, if we are waiting for that whole process to get completed and then if we proceed, It will be too time-consuming and our app wont even do any function while running.
To avoid this, asynchronization is used, It allows us to run the program while in the background another block of code is running.
Your app starts a task and doesn’t wait for it to finish; it continues with other work, and then comes back to the first task when it’s done.



async and await keyword (modifier):

Any method succeeded with the modifier "async" becomes a asynchronized method that returns a Future class.
When you call a async function, it executes and it pauses at the statement that has a "await" keyword until the Future completes its execution.


EXAMPLE-1:

hello() async
{

}
void main()
{
  print(hello());
}

OUTPUT:

Instance of 'Future<dynamic>'   //Shows that it returns a Future by default


EXAMPLE-2:

